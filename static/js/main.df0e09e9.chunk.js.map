{"version":3,"sources":["config/constants/tokens.ts","hooks/useApprove.ts","config/constants/nfts.ts","config/constants/endpoints.ts","config/constants/types.ts","components/UnlockButton.tsx","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","utils/bscscan.ts","hooks/useRefresh.ts","hooks/useAuth.ts","components/Tags.tsx","utils/getRpcUrl.ts","utils/wallet.ts","utils/web3React.ts","config/constants/index.ts","config/constants/teams.ts","state/teams/helpers.ts","state/pools/helpers.ts","config/constants/campaigns.ts","config/constants/meta.ts","components/layout/Page.tsx","components/layout/Container.tsx","utils/collectibles.ts","components/TokenPairImage/index.tsx","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","state/collectibles/index.ts","components/ApyCalculatorModal/index.tsx","state/achievements/helpers.ts","state/achievements/index.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","utils/farmsPriceHelpers.ts","contexts/ThemeContext.tsx","contexts/ToastsContext/Provider.tsx","hooks/useTabVisibility.ts","contexts/RefreshContext.tsx","config/constants/contracts.ts","utils/addressHelpers.ts","hooks/usePersistState.ts","utils/formatBalance.ts","utils/bigNumber.ts","utils/achievements.ts","utils/latinise.ts","state/hooks.ts","state/predictions/index.ts","hooks/useLastUpdated.ts","components/PageLoader.tsx","utils/getTimePeriods.ts","utils/apr.ts","config/index.ts","components/Select/Select.tsx","hooks/useUnstake.ts","hooks/useHarvest.ts","routerHistory.ts","components/Balance.tsx","utils/settings.ts","utils/contractHelpers.ts","utils/farmHelpers.ts","components/layout/Flex.tsx","hooks/usePreviousValue.ts","hooks/useDelayedUnmount.ts","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","hooks/useContract.ts","utils/multicall.ts","views/Pools/helpers.tsx","state/index.ts","hooks/useWeb3.ts","state/actions.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/web3.ts","state/types.ts","config/constants/pools.ts","hooks/useToast.ts","state/predictions/helpers.ts","state/predictions/queries.ts","config/localization/languages.ts","hooks/useTheme.ts","config/constants/farms.ts","views/Pools/components/ToggleView/ToggleView.tsx","hooks/useEagerConnect.ts","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","utils/compoundApyHelpers.ts","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","state/teams/index.tsx"],"names":["tokens","bnb","symbol","projectLink","cake","address","56","97","decimals","bscpad","rabbit","form","txl","orbs","cos","bunny","alice","for","bux","nuls","belt","ramp","bfi","dexe","bel","tpt","watch","xmark","bmxx","iotx","bor","bopen","dodo","swingby","bry","zee","swgb","swg","sfp","lina","lit","hget","bdo","egld","ust","wsote","front","helmet","btcst","bscx","ten","balbt","asr","atm","og","reef","ditto","juv","psg","vai","wbnb","blink","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","syrup","bifi","dusk","busd","eth","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","hzn","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","hotcross","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","kalm","deri","well","wex","waultx","popen","ez","vrt","tusd","mtrg","ktn","qkc","bcfx","mx","ata","mbox","boring","marsh","ampl","o3","hai","htb","woo","$dg","useApprove","lpContract","account","useWeb3React","masterChefContract","useMasterchef","onApprove","useCallback","a","approve","tx","useSousApprove","sousId","earningTokenSymbol","useState","requestedApproval","setRequestedApproval","useToast","toastSuccess","toastError","t","useTranslation","dispatch","useAppDispatch","sousChefContract","useSousChef","handleApprove","updateUserAllowance","console","error","message","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","methods","options","ethers","constants","MaxUint256","send","from","on","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","useEffect","allowance","call","response","currentAllowance","BigNumber","gt","checkApprovalStatus","useIfoApprove","tokenContract","spenderAddress","IPFS_GATEWAY","nftSources","NftType","PANCAKE","identifierKey","MIXIE","Nfts","name","description","images","lg","md","sm","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","ARCHIVED_NODE","PoolIds","PoolCategory","UnlockButton","props","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","priceHelperLps","pid","lpSymbol","lpAddresses","token","quoteToken","fetchFarm","farm","lpAddress","getAddress","calls","params","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","info","totalAllocPoint","allocPoint","_hex","BIG_ZERO","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","data","getFarmFromTokenSymbol","farms","tokenSymbol","preferredQuoteTokens","farmsWithTokenSymbol","filter","filterFarmsByQuoteToken","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","Boolean","quoteTokenInBusd","getFarmQuoteTokenPrice","BIG_ONE","fetchFarmsPrices","bnbBusdFarm","find","farmsWithPrices","baseTokenPrice","quoteTokenPrice","busdPrice","fetchFarmUserAllowances","masterChefAddress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","initialState","farmsConfig","userData","loadArchivedFarmsData","userDataLoaded","nonArchivedFarms","isArchivedPid","fetchFarmsPublicDataAsync","createAsyncThunk","pids","includes","farmsWithPriceHelpers","concat","priceHelperLpsConfig","farmsWithoutHelperLps","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","index","farmsSlice","createSlice","reducers","setLoadArchivedFarmsData","state","action","payload","extraReducers","builder","addCase","fulfilled","liveFarmData","farmData","forEach","userDataEl","findIndex","actions","getBscScanAddressUrl","BASE_BSC_SCAN_URL","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getBscScanBlockCountdownUrl","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","activate","deactivate","connectorID","connector","connectorsByName","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","profileClear","getItem","walletconnect","close","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","nodes","getNodeUrl","randomIndex","random","length","provider","ethereum","chainId","parseInt","request","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenImage","image","tokenAdded","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","teams","id","alt","background","textColor","users","points","profileContract","getProfileContract","getTeam","teamId","getTeamProfile","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","merge","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","getPancakeProfileAddress","multicallv2","profileABI","teamData","onChainTeamData","toNumber","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","totalStaked","stakingLimit","rest","getTokenPricesFromFarm","prices","quoteTokenAddress","toLocaleLowerCase","campaigns","title","badge","campaignMap","Map","campaign","set","DEFAULT_META","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","children","getIdentifierKeyFromAddress","nftAddress","nftSource","Object","values","nftSourceEntry","getTokenUrl","tokenUri","startsWith","slice","getAddressByType","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","fetch","uriDataResponse","ok","json","uriData","getNftByTokenId","nft","getImageUrlFromToken","TokenPairImage","primaryToken","secondaryToken","primarySrc","secondarySrc","useSousStake","isUsingBnb","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","cakeBnbLpToken","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","blockSlice","currentBlock","initialBlock","setBlock","fetchWalletNfts","nftSourcePromises","keys","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","Number","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","isLoading","pending","association","Grid","GridItem","GridHeaderItem","BulletList","ul","colors","textSubtle","ApyCalculatorModal","onDismiss","tokenPrice","apr","linkLabel","linkHref","roundingDecimals","compoundFrequency","performanceFee","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","mb","justifyContent","small","toFixed","fontSize","bold","textTransform","textAlign","ml","num","getRoi","amountEarned","amountInvested","style","maxWidth","p","display","freq","mt","fee","href","getUserPointIncreaseEvents","gql","toLowerCase","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","get","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","LS_KEY","fetchLocale","locale","getLanguageCodeFromLS","EN","isFetching","currentLanguage","languageMap","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","languages","setState","enLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","preferredFarm","some","CACHE_KEY","ThemeContext","React","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","stringify","dark","light","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","useTabVisibility","tabVisibleRef","useRef","onVisibilityChange","current","document","hidden","addEventListener","removeEventListener","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","ChainId","MAINNET","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","getLotteryAddress","getLotteryTicketAddress","getLotteryV2Address","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","localStorageKey","valueFromLS","setValue","getDecimalAmount","getBalanceAmount","dividedBy","getBalanceNumber","balance","getFullDisplayBalance","decimalsToAppear","formatNumber","number","minPrecision","maxPrecision","BIG_NINE","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","ifoCampaignAddresses","pointCenterContract","getPointCenterIfoContract","checkClaimStatuses","claimStatuses","pointCenterIfoABI","claimStatus","claimableIfoData","claimableIfoDataItem","ifoCampaign","Latinise","latin_map","τ","Τ","latinise","input","x","usePollFarmsData","includeArchive","farmToFetch","usePollCoreFarmData","usePollBlockNumber","web3NoAccount","getBlockNumber","blockNumber","useFarms","useSelector","useFarmFromPid","f","useFarmUser","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","useFetchPublicPoolsData","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useTeam","fetchTeam","useTeams","fetchTeams","useFetchAchievements","useAchievements","usePriceBnbBusd","cakeBnbFarm","useBlock","useInitialBlock","useIsHistoryPaneOpen","predictions","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetRounds","rounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","status","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","bets","history","useGetBetByRoundId","roundId","useBetCanClaim","bet","getCanClaim","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","tokenIds","nftsInWallet","PredictionStatus","INITIAL","HistoryFilter","ALL","fetchBet","getBet","transformBetResponse","fetchRoundBet","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","Wrapper","PageLoader","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","getPoolApr","stakingTokenPrice","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","CAKE_PER_YEAR","lpRewardsApr","lpAprs","plus","config","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","LOTTERY_TICKET_PRICE","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","DEFAULT_GAS_PRICE","DropDownHeader","shadows","inset","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ListItem","li","Select","onChange","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","height","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","ref","label","option","selectedIndex","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","createBrowserHistory","Balance","isDisabled","unit","prefix","previousValue","start","end","duration","separator","GAS_SETTINGS","default","reallyfast","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","getContract","abi","web3","amountInGwei","_web3","BSCTESTNET","Contract","getBep20Contract","bep20Abi","erc721Abi","getLpContract","lpTokenAbi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","poolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","pointCenterIfo","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","FlexLayout","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","Outer","Box","gradients","bubblegum","Inner","PageHeader","StyledInput","Input","InputWrapper","SearchInput","onChangeCallback","placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","debounce","e","target","onBlur","useIfoV1Contract","useWeb3","useIfoV2Contract","useERC20","useERC721","useBunnyFactory","useLottery","useLotteryTicket","usePointCenterIfoContract","useBunnySpecialContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useChainlinkOracleContract","multi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","res","decodeFunctionResult","tryAggregate","requireSuccess","result","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","isAutoVault","earningTokenPrice","isHighValueToken","getCakeVaultEarnings","hasAutoEarnings","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","endBlock","isFinished","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","blocksToDisplay","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","useDispatch","library","refEth","Web3","setweb3","enterStaking","gas","deposit","leaveStaking","withdraw","emergencyWithdraw","Token","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","getState","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","earningToken","parseFloat","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","archivedHttpProvider","web3WithArchivedNodeProvider","BetPosition","CORE","COMMUNITY","toastContext","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","claimedHash","totalBNB","roundResponse","positionResponse","transformTotalWonResponse","marketResponse","houseRounds","totalBNBTreasury","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","getTotalWon","HOUSE","where","first","skip","betId","code","languageList","useTheme","StyledThemeContext","isCommunity","ViewMode","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","icon","items","text","toLocaleUpperCase","Menu","currentLang","langs","setLang","links","username","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","AprRow","tooltipContent","useTooltip","placement","targetRef","tooltipVisible","earningsPercentageToDisplay","apyModalLink","useModal","onPresentApyModal","alignItems","scale","PromotedGradient","keyframes","StyledCard","Card","isPromoted","primaryBright","secondary","card","isDesktop","StyledCardInner","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","flexDirection","manualCakeTotalMinusAutoVault","getTotalStakedBalance","external","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CakeVaultTokenPairImage","primaryTokenSrc","CardHeader","backgroundDisabled","StyledCardHeader","isStaking","isCakePool","ApprovalAction","stakingTokenContract","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","StyledButton","Button","PercentageButton","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","minWidth","src","onUserInput","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","Text","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","CardFooter","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","subtitle","showSubtitle","role","HelpIconWrapper","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","openRoiModal","padding","marginLeft","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","cardBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","SearchSortContainer","ControlStretch","Pools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","searchQuery","setSearchQuery","sortOption","setSortOption","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","showFinishedPools","poolsToShow","chosenPools","lowercaseQuery","poolsToSort","sortPools","cardLayout","tableLayout","Home","lazy","Farms","Lottery","Ifos","NotFound","Collectibles","Teams","Team","Profile","TradingCompetition","Predictions","App","Global","exact","component","iterations","Providers","ReactDOM","render","StrictMode","getElementById","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","transformProfileResponse","profileResponse","userId","getUsername","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded"],"mappings":"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","file":"static/js/main.df0e09e9.chunk.js","sourcesContent":["const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'CAKE',\n    address: {\n      56: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\n      97: '0xa35062141Fa33BCA92Ce69FeD37D0E8908868AAe',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bscpad: {\n    symbol: 'BSCPAD',\n    address: {\n      56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscpad.com/',\n  },\n  rabbit: {\n    symbol: 'RABBIT',\n    address: {\n      56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rabbitfinance.io/earn',\n  },\n  form: {\n    symbol: 'FORM',\n    address: {\n      56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://formation.fi/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  orbs: {\n    symbol: 'ORBS',\n    address: {\n      56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.orbs.com/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670B735ED92734F5628692F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87F74415190425ccD873048C708F8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474A89358B2C2265883DF993b12F0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  swg: {\n    symbol: 'SWG',\n    address: {\n      56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  syrup: {\n    symbol: 'SYRUP',\n    address: {\n      56: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n      97: '0xfE1e507CeB712BDe086f3579d2c03248b2dB77f9',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      56: '0x55d398326f99059fF775485246999027B3197955',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xCD40F2670CF58720b694968698A5514e924F742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n  well: {\n    symbol: 'WELL',\n    address: {\n      56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitwellex.com/',\n  },\n  wex: {\n    symbol: 'WEX',\n    address: {\n      56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  waultx: {\n    symbol: 'WAULTx',\n    address: {\n      56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://wault.finance/',\n  },\n  popen: {\n    symbol: 'pOPEN',\n    address: {\n      56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  ez: {\n    symbol: 'EZ',\n    address: {\n      56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  vrt: {\n    symbol: 'VRT',\n    address: {\n      56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  tusd: {\n    symbol: 'TUSD',\n    address: {\n      56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.trueusd.com/',\n  },\n  mtrg: {\n    symbol: 'MTRG',\n    address: {\n      56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.meter.io/',\n  },\n  ktn: {\n    symbol: 'KTN',\n    address: {\n      56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kattana.io/',\n  },\n  qkc: {\n    symbol: 'QKC',\n    address: {\n      56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://quarkchain.io/',\n  },\n  bcfx: {\n    symbol: 'bCFX',\n    address: {\n      56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.confluxnetwork.org/',\n  },\n  mx: {\n    symbol: 'MX',\n    address: {\n      56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mxc.com/',\n  },\n  ata: {\n    symbol: 'ATA',\n    address: {\n      56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.ata.network/',\n  },\n  mbox: {\n    symbol: 'MBOX',\n    address: {\n      56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.mobox.io/#/',\n  },\n  boring: {\n    symbol: 'BORING',\n    address: {\n      56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  marsh: {\n    symbol: 'MARSH',\n    address: {\n      56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unmarshal.io/',\n  },\n  ampl: {\n    symbol: 'AMPL',\n    address: {\n      56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.ampleforth.org/',\n  },\n  o3: {\n    symbol: 'O3',\n    address: {\n      56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://o3swap.com/',\n  },\n  hai: {\n    symbol: 'HAI',\n    address: {\n      56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hacken.io/',\n  },\n  htb: {\n    symbol: 'HTB',\n    address: {\n      56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotbit.io/',\n  },\n  woo: {\n    symbol: 'WOO',\n    address: {\n      56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://woo.network/',\n  },\n  $dg: {\n    symbol: '$DG',\n    address: {\n      56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://decentral.games/',\n  },\n}\n\nexport default tokens\n","import { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useMasterchef, useCake, useSousChef, useLottery, useCakeVaultContract } from './useContract'\nimport useToast from './useToast'\nimport useLastUpdated from './useLastUpdated'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      if (tx) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve CAKE auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'CAKE' }))\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANCAKE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANCAKE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANCAKE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANCAKE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANCAKE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANCAKE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANCAKE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANCAKE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master CAKE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANCAKE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of CAKE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANCAKE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's CAKE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANCAKE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANCAKE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANCAKE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANCAKE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANCAKE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANCAKE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const ARCHIVED_NODE = process.env.REACT_APP_ARCHIVED_NODE\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n  busdPrice?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANCAKE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst priceHelperLps: FarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'QSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\n    },\n    token: tokens.qsd,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { Farm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountMc: SerializedBigNumber\n  quoteTokenAmountMc: SerializedBigNumber\n  tokenAmountTotal: SerializedBigNumber\n  quoteTokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: getAddress(token.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: getAddress(quoteToken.address),\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: getAddress(token.address),\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: getAddress(quoteToken.address),\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountMc: tokenAmountMc.toJSON(),\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { Farm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { FarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      return farm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { Farm } from 'state/types'\n\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms) => {\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 252)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\n    return { ...farm, token, quoteToken }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import { BASE_BSC_SCAN_URL } from 'config'\n\nexport const getBscScanAddressUrl = (address: string) => {\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\n}\n\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\n}\n\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\n}\n\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport { Farm, Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'PancakeSwap',\n  description:\n    'The most popular AMM on BSC by user count! Earn CAKE through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by PancakeSwap), NFTs, and more, on a platform you can trust.',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('PancakeSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('PancakeSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('PancakeSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('PancakeSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('PancakeSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('PancakeSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('PancakeSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('PancakeSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('PancakeSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('PancakeSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n    : ''\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n} from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\n  return `/images/tokens/${address}.svg`\n}\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\nexport default TokenPairImage\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'CAKE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Flex mb=\"24px\" justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('APR (incl. LP rewards)')}\n          </Text>\n          <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n        </Flex>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import { useEffect, useRef } from 'react'\n\nconst useTabVisibility = () => {\n  const tabVisibleRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      tabVisibleRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return { tabVisibleRef }\n}\n\nexport default useTabVisibility\n","import React, { useState, useEffect } from 'react'\nimport useTabVisibility from 'hooks/useTabVisibility'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const { tabVisibleRef } = useTabVisibility()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (tabVisibleRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [tabVisibleRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export default {\n  masterChef: {\n    97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\n    56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  },\n  sousChef: {\n    97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n    56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '0x8175c10383511b3a1C68f9dB222dc14A19CC950e',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  lotteryV2: {\n    97: '0x374524c998d1E9afC7EB4d2025153b0b3FDCCf29',\n    56: '',\n  },\n  multiCall: {\n    56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\n    97: '0x8F3273Fb89B075b1645095ABaC6ed17B2d4Bc576',\n  },\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n  cakeVault: {\n    56: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\n    97: '',\n  },\n  predictions: {\n    56: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\n    97: '0x4f3140C74789F1D809420343ea83BcE52B7bbAA5',\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n}\n","import { ChainId } from '@pancakeswap-libs/sdk'\nimport addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import { ethers } from 'ethers'\nimport { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: ethers.BigNumber\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await multicallv2(\n    pointCenterIfoABI,\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\n      }\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: claimableIfoDataItem.numberPoints.toNumber(),\n      },\n    ]\n  }, [])\n}\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { farmsConfig } from 'config/constants'\nimport web3NoAccount from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\n\nexport const usePollFarmsData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = CAKE-BNB LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([251, 252]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const usePollBlockNumber = () => {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.token.busdPrice)\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3NoAccount.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(252)\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(251)\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): number => {\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  if (cakeRewardsApr.isNaN() || !cakeRewardsApr.isFinite()) {\n    return null\n  }\n  const lpRewardsApr = lpAprs[farmAddress.toLocaleLowerCase()] ?? 0\n  const combinedApr = cakeRewardsApr.plus(lpRewardsApr)\n  return combinedApr.toNumber()\n}\n\nexport default null\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// CAKE_PER_BLOCK details\n// 40 CAKE is minted per block\n// 20 CAKE per block is sent to Burn pool (A farm just for burning cake)\n// 10 CAKE per block goes to CAKE syrup pool\n// 10 CAKE per block goes to Yield farms and lottery\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// CAKE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const CAKE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 200000\nexport const DEFAULT_GAS_PRICE = 5\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    return txHash\n  }, [account, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getDecimalAmount } from './formatBalance'\n\nexport interface UserSettings {\n  gasPrice: number\n}\n\nexport const VERSION = 1.01\n\nexport const GAS_SETTINGS = {\n  default: DEFAULT_GAS_PRICE,\n  fast: 10,\n  reallyfast: 15,\n}\n\nexport const getGasPriceInWei = (amountInGwei: number) => {\n  return getDecimalAmount(new BigNumber(amountInGwei), 9)\n}\n\nexport const getDefaultSettings = (): UserSettings => ({\n  gasPrice: GAS_SETTINGS.default,\n})\n\nexport const getStorageKey = (account: string) => {\n  return `pancakeswap_settings_${account}_${VERSION}`\n}\n\nexport const getSettings = (account: string): UserSettings => {\n  try {\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\n  } catch (error) {\n    return getDefaultSettings()\n  }\n}\n\nexport const setSettings = (account: string, newSettings: UserSettings) => {\n  localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\n}\n\nexport const setSetting = (account: string, newSetting: Partial<UserSettings>) => {\n  const currentSettings = getSettings(account)\n  setSettings(account, { ...currentSettings, ...newSetting })\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { ChainId } from '@pancakeswap-libs/sdk'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { DEFAULT_GAS_PRICE } from 'config'\nimport { getSettings, getGasPriceInWei } from './settings'\n\nexport const getDefaultGasPrice = () => {\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n  if (chainId === ChainId.BSCTESTNET) {\n    return 10\n  }\n  return DEFAULT_GAS_PRICE\n}\n\nconst getContract = (abi: any, address: string, web3?: Web3, account?: string) => {\n  const _web3 = web3 ?? web3NoAccount\n  const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\n\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address, {\n    gasPrice: getGasPriceInWei(gasPrice).toString(),\n  })\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getLotteryV2Contract = (web3?: Web3) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\nexport const getMulticallContract = (web3?: Web3) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), web3)\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useLotteryV2Contract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryV2Contract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import Web3 from 'web3'\nimport { Interface } from '@ethersproject/abi'\nimport web3NoAccount from 'utils/web3'\nimport { getMulticallContract } from 'utils/contractHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  web3?: Web3\n  blockNumber?: number\n  requireSuccess?: boolean\n}\n\nconst multicall = async (abi: any[], calls: Call[], options: MulticallOptions = {}) => {\n  try {\n    const multi = getMulticallContract(options.web3 || web3NoAccount)\n    const itf = new Interface(abi)\n\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n    const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\n */\nexport const multicallv2 = async (abi: any[], calls: Call[], options: MulticallOptions = {}): Promise<any> => {\n  const multi = getMulticallContract(options.web3 || web3NoAccount)\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.methods\n    .tryAggregate(options.requireSuccess === undefined ? true : options.requireSuccess, calldata)\n    .call(undefined, options.blockNumber)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\n\nexport const getAprData = (pool: Pool, performanceFee: number) => {\n  const { isAutoVault, earningTokenPrice, apr } = pool\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n      numberOfDays: 365,\n      farmApr: apr,\n      tokenPrice: earningTokenPrice,\n      roundingDecimals,\n      compoundFrequency,\n      performanceFee,\n    })\n    const autoApr = getRoi({\n      amountEarned: tokenEarnedPerThousand365D,\n      amountInvested: oneThousandDollarsWorthOfToken,\n    })\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\n  }\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport web3NoAccount from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : web3NoAccount)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : web3NoAccount)\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { Pair, TokenAmount, Token } from '@pancakeswap-libs/sdk'\nimport { getLpContract, getMasterchefContract } from 'utils/contractHelpers'\nimport farms from 'config/constants/farms'\nimport { getAddress, getCakeAddress } from 'utils/addressHelpers'\nimport tokens from 'config/constants/tokens'\nimport { web3WithArchivedNodeProvider } from './web3'\nimport { getBalanceAmount } from './formatBalance'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({\n      from: account,\n      gas: DEFAULT_GAS_LIMIT,\n      value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\n    })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst cakeBnbPid = 251\nconst cakeBnbFarm = farms.find((farm) => farm.pid === cakeBnbPid)\n\nconst CAKE_TOKEN = new Token(chainId, getCakeAddress(), 18)\nconst WBNB_TOKEN = new Token(chainId, tokens.wbnb.address[chainId], 18)\nconst CAKE_BNB_TOKEN = new Token(chainId, getAddress(cakeBnbFarm.lpAddresses), 18)\n\n/**\n * Returns the total CAKE staked in the CAKE-BNB LP\n */\nexport const getUserStakeInCakeBnbLp = async (account: string, block?: number) => {\n  try {\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\n    const cakeBnbContract = getLpContract(getAddress(cakeBnbFarm.lpAddresses), web3WithArchivedNodeProvider)\n    const totalSupplyLP = await cakeBnbContract.methods.totalSupply().call(undefined, block)\n    const reservesLP = await cakeBnbContract.methods.getReserves().call(undefined, block)\n    const cakeBnbBalance = await masterContract.methods.userInfo(cakeBnbPid, account).call(undefined, block)\n\n    const pair: Pair = new Pair(\n      new TokenAmount(CAKE_TOKEN, reservesLP._reserve0.toString()),\n      new TokenAmount(WBNB_TOKEN, reservesLP._reserve1.toString()),\n    )\n    const cakeLPBalance = pair.getLiquidityValue(\n      pair.token0,\n      new TokenAmount(CAKE_BNB_TOKEN, totalSupplyLP.toString()),\n      new TokenAmount(CAKE_BNB_TOKEN, cakeBnbBalance.amount.toString()),\n      false,\n    )\n\n    return new BigNumber(cakeLPBalance.toSignificant(18))\n  } catch (error) {\n    console.error(`CAKE-BNB LP error: ${error}`)\n    return BIG_ZERO\n  }\n}\n\n/**\n * Gets the cake staked in the main pool\n */\nexport const getUserStakeInCakePool = async (account: string, block?: number) => {\n  try {\n    const masterContract = getMasterchefContract(web3WithArchivedNodeProvider)\n    const response = await masterContract.methods.userInfo(0, account).call(undefined, block)\n\n    return getBalanceAmount(new BigNumber(response.amount))\n  } catch (error) {\n    console.error('Error getting stake in CAKE pool', error)\n    return BIG_ZERO\n  }\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport web3NoAccount from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3NoAccount.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getAddress } from 'utils/addressHelpers'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const prices = getTokenPricesFromFarm(getState().farms.data)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { ARCHIVED_NODE } from 'config/constants/endpoints'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 } as HttpProviderOptions)\nexport const web3WithArchivedNodeProvider = new Web3(archivedHttpProvider)\n\nexport default web3NoAccount\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport type SerializedBigNumber = string\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: SerializedBigNumber\n  quoteTokenAmountMc?: SerializedBigNumber\n  tokenAmountTotal?: SerializedBigNumber\n  quoteTokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedHash: string\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n  {\n    sousId: 189,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bscpad,\n    contractAddress: {\n      97: '',\n      56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3877',\n  },\n  {\n    sousId: 188,\n    stakingToken: tokens.cake,\n    earningToken: tokens.rabbit,\n    contractAddress: {\n      97: '',\n      56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.993',\n  },\n  {\n    sousId: 187,\n    stakingToken: tokens.cake,\n    earningToken: tokens.waultx,\n    contractAddress: {\n      97: '',\n      56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '7.9108',\n  },\n  {\n    sousId: 186,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wex,\n    contractAddress: {\n      97: '',\n      56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '11.574',\n  },\n  {\n    sousId: 185,\n    stakingToken: tokens.cake,\n    earningToken: tokens.form,\n    contractAddress: {\n      97: '',\n      56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.4467',\n  },\n  {\n    sousId: 184,\n    stakingToken: tokens.cake,\n    earningToken: tokens.orbs,\n    contractAddress: {\n      97: '',\n      56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.8946',\n  },\n  {\n    sousId: 183,\n    stakingToken: tokens.cake,\n    earningToken: tokens.$dg,\n    contractAddress: {\n      97: '',\n      56: '0xa07a91da6d10173f33c294803684bceede325957',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00135',\n  },\n  {\n    sousId: 182,\n    stakingToken: tokens.cake,\n    earningToken: tokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x88c321d444c88acf3e747dc90f20421b97648903',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3854',\n  },\n  {\n    sousId: 181,\n    stakingToken: tokens.cake,\n    earningToken: tokens.woo,\n    contractAddress: {\n      97: '',\n      56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0003854',\n  },\n  {\n    sousId: 180,\n    stakingToken: tokens.cake,\n    earningToken: tokens.htb,\n    contractAddress: {\n      97: '',\n      56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '5.2083',\n  },\n  {\n    sousId: 179,\n    stakingToken: tokens.cake,\n    earningToken: tokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1001',\n  },\n  {\n    sousId: 178,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 177,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hai,\n    contractAddress: {\n      97: '',\n      56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.3078',\n  },\n  {\n    sousId: 176,\n    stakingToken: tokens.cake,\n    earningToken: tokens.o3,\n    contractAddress: {\n      97: '',\n      56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.107638',\n  },\n  {\n    sousId: 175,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ampl,\n    contractAddress: {\n      97: '',\n      56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.398',\n  },\n  {\n    sousId: 174,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4843',\n  },\n  {\n    sousId: 173,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6741',\n  },\n  {\n    sousId: 172,\n    stakingToken: tokens.cake,\n    earningToken: tokens.marsh,\n    contractAddress: {\n      97: '',\n      56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1108',\n  },\n  {\n    sousId: 171,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mbox,\n    contractAddress: {\n      97: '',\n      56: '0x36f9452083fc9bc469a31e7966b873f402292433',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4803',\n  },\n  {\n    sousId: 170,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ata,\n    contractAddress: {\n      97: '',\n      56: '0xc612680457751d0d01b5d901ad08132a3b001900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n  },\n  {\n    sousId: 169,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mx,\n    contractAddress: {\n      97: '',\n      56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.27777',\n  },\n  {\n    sousId: 168,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bcfx,\n    contractAddress: {\n      97: '',\n      56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 167,\n    stakingToken: tokens.cake,\n    earningToken: tokens.qkc,\n    contractAddress: {\n      97: '',\n      56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.9143',\n  },\n  {\n    sousId: 166,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ktn,\n    contractAddress: {\n      97: '',\n      56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01215',\n  },\n  {\n    sousId: 165,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mtrg,\n    contractAddress: {\n      97: '',\n      56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.05613',\n  },\n  {\n    sousId: 164,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tusd,\n    contractAddress: {\n      97: '',\n      56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.5787',\n  },\n  {\n    sousId: 163,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vrt,\n    contractAddress: {\n      97: '',\n      56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '40.5092',\n  },\n  {\n    sousId: 162,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0868',\n  },\n  {\n    sousId: 161,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ez,\n    contractAddress: {\n      97: '',\n      56: '0xb19395702460261e51edf7a7b130109c64f13af9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01736',\n  },\n  {\n    sousId: 160,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kalm,\n    contractAddress: {\n      97: '',\n      56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    isFinished: true,\n    tokenPerBlock: '0.00868',\n  },\n  {\n    sousId: 159,\n    stakingToken: tokens.cake,\n    earningToken: tokens.popen,\n    contractAddress: {\n      97: '',\n      56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.19097',\n  },\n  {\n    sousId: 158,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.023148',\n  },\n  {\n    sousId: 157,\n    stakingToken: tokens.cake,\n    earningToken: tokens.well,\n    contractAddress: {\n      97: '',\n      56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2025',\n    sortOrder: 999,\n  },\n  {\n    sousId: 156,\n    stakingToken: tokens.cake,\n    earningToken: tokens.deri,\n    contractAddress: {\n      97: '',\n      56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.6087',\n    sortOrder: 999,\n  },\n  {\n    sousId: 155,\n    stakingToken: tokens.cake,\n    earningToken: tokens.chr,\n    contractAddress: {\n      97: '',\n      56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '1.655',\n    sortOrder: 999,\n  },\n  {\n    sousId: 154,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cyc,\n    contractAddress: {\n      97: '',\n      56: '0xD714738837944C3c592477249E8edB724A76e068',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00015914',\n    sortOrder: 999,\n  },\n  {\n    sousId: 153,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xend,\n    contractAddress: {\n      97: '',\n      56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.31828',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 152,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.03553',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 151,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hotcross,\n    contractAddress: {\n      97: '',\n      56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 150,\n    stakingToken: tokens.cake,\n    earningToken: tokens.rfox,\n    contractAddress: {\n      97: '',\n      56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.7361',\n    isFinished: false,\n  },\n  {\n    sousId: 149,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wmass,\n    contractAddress: {\n      97: '',\n      56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.24942',\n    isFinished: false,\n  },\n  {\n    sousId: 148,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ubxt,\n    contractAddress: {\n      97: '',\n      56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.4074',\n    isFinished: false,\n  },\n  {\n    sousId: 147,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btr,\n    contractAddress: {\n      97: '',\n      56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 146,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τdoge,\n    contractAddress: {\n      97: '',\n      56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.868',\n    isFinished: false,\n  },\n  {\n    sousId: 145,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pmon,\n    contractAddress: {\n      97: '',\n      56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01261',\n    isFinished: false,\n  },\n  {\n    sousId: 144,\n    stakingToken: tokens.cake,\n    earningToken: tokens.one,\n    contractAddress: {\n      97: '',\n      56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '57.87',\n    isFinished: false,\n  },\n  {\n    sousId: 143,\n    stakingToken: tokens.cake,\n    earningToken: tokens.fine,\n    contractAddress: {\n      97: '',\n      56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.1342',\n    isFinished: false,\n  },\n  {\n    sousId: 142,\n    stakingToken: tokens.doge,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01388',\n    isFinished: false,\n  },\n  {\n    sousId: 141,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.01331',\n    isFinished: false,\n  },\n  {\n    sousId: 140,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oin,\n    contractAddress: {\n      97: '',\n      56: '0x01453a74a94687fa3f99b80762435855a13664f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 139,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hyfi,\n    contractAddress: {\n      97: '',\n      56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.8935',\n    isFinished: false,\n  },\n  {\n    sousId: 138,\n    stakingToken: tokens.cake,\n    earningToken: tokens.kun,\n    contractAddress: {\n      97: '',\n      56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23148',\n    isFinished: false,\n  },\n  {\n    sousId: 137,\n    stakingToken: tokens.cake,\n    earningToken: tokens.math,\n    contractAddress: {\n      97: '',\n      56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15798',\n    isFinished: false,\n  },\n  {\n    sousId: 136,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.17361',\n    isFinished: false,\n  },\n  {\n    sousId: 135,\n    stakingToken: tokens.cake,\n    earningToken: tokens.win,\n    contractAddress: {\n      97: '',\n      56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '462.96',\n    isFinished: false,\n  },\n  {\n    sousId: 134,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trx,\n    contractAddress: {\n      97: '',\n      56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '4.0509',\n    isFinished: false,\n  },\n  {\n    sousId: 133,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btt,\n    contractAddress: {\n      97: '',\n      56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '79.86',\n    isFinished: false,\n  },\n  {\n    sousId: 132,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lmt,\n    contractAddress: {\n      97: '',\n      56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.66145',\n    isFinished: false,\n  },\n  {\n    sousId: 131,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pnt,\n    contractAddress: {\n      97: '',\n      56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09548',\n    isFinished: false,\n  },\n  {\n    sousId: 130,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xdc8943d806f9dd64312d155284abf780455fd345',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0298',\n    isFinished: false,\n  },\n  {\n    sousId: 129,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4861',\n    isFinished: true,\n  },\n  {\n    sousId: 128,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: false,\n  },\n  {\n    sousId: 127,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: false,\n  },\n  {\n    sousId: 126,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x7112f8988f075c7784666ab071927ae4109a8076',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: false,\n  },\n  {\n    sousId: 125,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: false,\n  },\n  {\n    sousId: 124,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: false,\n  },\n  {\n    sousId: 123,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x9483ca44324de06802576866b9d296f7614f45ac',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: false,\n  },\n  {\n    sousId: 122,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: false,\n  },\n  {\n    sousId: 121,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: false,\n  },\n  {\n    sousId: 120,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: false,\n  },\n  {\n    sousId: 119,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: false,\n  },\n  {\n    sousId: 118,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: false,\n  },\n  {\n    sousId: 117,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.009837',\n    isFinished: true,\n  },\n  {\n    sousId: 116,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dfd,\n    contractAddress: {\n      97: '',\n      56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.46296',\n    isFinished: false,\n  },\n  {\n    sousId: 115,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpaca,\n    contractAddress: {\n      97: '',\n      56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.22743',\n    isFinished: false,\n  },\n  {\n    sousId: 114,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: false,\n  },\n  {\n    sousId: 113,\n    stakingToken: tokens.cake,\n    earningToken: tokens.τbtc,\n    contractAddress: {\n      97: '',\n      56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000608',\n    isFinished: true,\n  },\n  {\n    sousId: 112,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.21527',\n  },\n  {\n    sousId: 111,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xed,\n    contractAddress: {\n      97: '',\n      56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 110,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hakka,\n    contractAddress: {\n      97: '',\n      56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.4722',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 109,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cgg,\n    contractAddress: {\n      97: '',\n      56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.10918',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 108,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mix,\n    contractAddress: {\n      97: '',\n      56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.3721',\n  },\n  {\n    sousId: 107,\n    stakingToken: tokens.cake,\n    earningToken: tokens.suter,\n    contractAddress: {\n      97: '',\n      56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '15.3356',\n  },\n  {\n    sousId: 106,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '14.4675',\n  },\n  {\n    sousId: 105,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hzn,\n    contractAddress: {\n      97: '',\n      56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6944',\n  },\n  {\n    sousId: 104,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alpa,\n    contractAddress: {\n      97: '',\n      56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.23495',\n  },\n  {\n    sousId: 103,\n    stakingToken: tokens.cake,\n    earningToken: tokens.perl,\n    contractAddress: {\n      97: '',\n      56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 102,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tlm,\n    contractAddress: {\n      97: '',\n      56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '17.361',\n  },\n  {\n    sousId: 101,\n    stakingToken: tokens.cake,\n    earningToken: tokens.jgn,\n    contractAddress: {\n      97: '',\n      56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08796',\n  },\n  {\n    sousId: 100,\n    stakingToken: tokens.cake,\n    earningToken: tokens.eps,\n    contractAddress: {\n      97: '',\n      56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.07716',\n  },\n  {\n    sousId: 99,\n    stakingToken: tokens.cake,\n    earningToken: tokens.arpa,\n    contractAddress: {\n      97: '',\n      56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.949',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 98,\n    stakingToken: tokens.cake,\n    earningToken: tokens.itam,\n    contractAddress: {\n      97: '',\n      56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '3.096',\n  },\n  {\n    sousId: 97,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bondly,\n    contractAddress: {\n      97: '',\n      56: '0x1329ad151dE6C441184E32E108401126AE850937',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.4629',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 96,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tko,\n    contractAddress: {\n      97: '',\n      56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.1574',\n  },\n  {\n    sousId: 95,\n    stakingToken: tokens.cake,\n    earningToken: tokens.apys,\n    contractAddress: {\n      97: '',\n      56: '0x46530d79b238f809e80313e73715b160c66677aF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.09953',\n  },\n  {\n    sousId: 94,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hoo,\n    contractAddress: {\n      97: '',\n      56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.489',\n  },\n  {\n    sousId: 93,\n    stakingToken: tokens.cake,\n    earningToken: tokens.oddz,\n    contractAddress: {\n      97: '',\n      56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.11284',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 92,\n    stakingToken: tokens.cake,\n    earningToken: tokens.easy,\n    contractAddress: {\n      97: '',\n      56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0072338',\n  },\n  {\n    sousId: 91,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nrv,\n    contractAddress: {\n      97: '',\n      56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.15046',\n  },\n  {\n    sousId: 90,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dego,\n    contractAddress: {\n      97: '',\n      56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00405',\n  },\n  {\n    sousId: 89,\n    stakingToken: tokens.cake,\n    earningToken: tokens.gum,\n    contractAddress: {\n      97: '',\n      56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.08912',\n  },\n  {\n    sousId: 88,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pbtc,\n    contractAddress: {\n      97: '',\n      56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.0000031',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 87,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dft,\n    contractAddress: {\n      97: '',\n      56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.6811',\n  },\n  {\n    sousId: 86,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swth,\n    contractAddress: {\n      97: '',\n      56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '2.3148',\n  },\n  {\n    sousId: 85,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lien,\n    contractAddress: {\n      97: '',\n      56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.003472',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 84,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zil,\n    contractAddress: {\n      97: '',\n      56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '1.0995',\n  },\n  {\n    sousId: 83,\n    stakingToken: tokens.cake,\n    earningToken: tokens.pcws,\n    contractAddress: {\n      97: '',\n      56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00434',\n  },\n  {\n    sousId: 82,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bbadger,\n    contractAddress: {\n      97: '',\n      56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00265278',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 81,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdigg,\n    contractAddress: {\n      97: '',\n      56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.00000403',\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 80,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lto,\n    contractAddress: {\n      97: '',\n      56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '0.2893',\n  },\n  {\n    sousId: 79,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 78,\n    stakingToken: tokens.cake,\n    earningToken: tokens.mir,\n    contractAddress: {\n      97: '',\n      56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01273',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 77,\n    stakingToken: tokens.cake,\n    earningToken: tokens.trade,\n    contractAddress: {\n      97: '',\n      56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4484',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 76,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dusk,\n    contractAddress: {\n      97: '',\n      56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4629',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 75,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bifi,\n    contractAddress: {\n      97: '',\n      56: '0xB4C68A1C565298834360BbFF1652284275120D47',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00007234',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 74,\n    stakingToken: tokens.cake,\n    earningToken: tokens.txl,\n    contractAddress: {\n      97: '',\n      56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.434027',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 73,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cos,\n    contractAddress: {\n      97: '',\n      56: '0xF682D186168b4114ffDbF1291F19429310727151',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5.787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 72,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bunny,\n    contractAddress: {\n      97: '',\n      56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00289',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 71,\n    stakingToken: tokens.cake,\n    earningToken: tokens.alice,\n    contractAddress: {\n      97: '',\n      56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.14467',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 70,\n    stakingToken: tokens.cake,\n    earningToken: tokens.for,\n    contractAddress: {\n      97: '',\n      56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '2.8935',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 69,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bux,\n    contractAddress: {\n      97: '',\n      56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5787',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 68,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nuls,\n    contractAddress: {\n      97: '',\n      56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0868',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 67,\n    stakingToken: tokens.cake,\n    earningToken: tokens.belt,\n    contractAddress: {\n      97: '',\n      56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00868',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 66,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ramp,\n    contractAddress: {\n      97: '',\n      56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4861',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 65,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bfi,\n    contractAddress: {\n      97: '',\n      56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0001157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 64,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dexe,\n    contractAddress: {\n      97: '',\n      56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.009837',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 63,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bel,\n    contractAddress: {\n      97: '',\n      56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0549',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 62,\n    stakingToken: tokens.tpt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0462',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 61,\n    stakingToken: tokens.cake,\n    earningToken: tokens.tpt,\n    contractAddress: {\n      97: '',\n      56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '3.616',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 60,\n    stakingToken: tokens.cake,\n    earningToken: tokens.watch,\n    contractAddress: {\n      97: '',\n      56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.3472',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 59,\n    stakingToken: tokens.cake,\n    earningToken: tokens.xmark,\n    contractAddress: {\n      97: '',\n      56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0413',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 58,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bmxx,\n    contractAddress: {\n      97: '',\n      56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.00248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 57,\n    stakingToken: tokens.cake,\n    earningToken: tokens.iotx,\n    contractAddress: {\n      97: '',\n      56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '6.365',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 56,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bor,\n    contractAddress: {\n      97: '',\n      56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.000395',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 55,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bopen,\n    contractAddress: {\n      97: '',\n      56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0723',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 54,\n    stakingToken: tokens.sushi,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0367',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 53,\n    stakingToken: tokens.cake,\n    earningToken: tokens.dodo,\n    contractAddress: {\n      97: '',\n      56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0578',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 52,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swingby,\n    contractAddress: {\n      97: '',\n      56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.13',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 51,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bry,\n    contractAddress: {\n      97: '',\n      56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 50,\n    stakingToken: tokens.cake,\n    earningToken: tokens.zee,\n    contractAddress: {\n      97: '',\n      56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1736',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 49,\n    stakingToken: tokens.cake,\n    earningToken: tokens.swgb,\n    contractAddress: {\n      97: '',\n      56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.899',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 48,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.055',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 47,\n    stakingToken: tokens.comp,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.55',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 46,\n    stakingToken: tokens.cake,\n    earningToken: tokens.sfp,\n    contractAddress: {\n      97: '',\n      56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.6',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 45,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 44,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lina,\n    contractAddress: {\n      97: '',\n      56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0983',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 43,\n    stakingToken: tokens.cake,\n    earningToken: tokens.lit,\n    contractAddress: {\n      97: '',\n      56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.231',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 42,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hget,\n    contractAddress: {\n      97: '',\n      56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0138',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 41,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bdo,\n    contractAddress: {\n      97: '',\n      56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.075',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 40,\n    stakingToken: tokens.cake,\n    earningToken: tokens.egld,\n    contractAddress: {\n      97: '',\n      56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.001215',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 39,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ust,\n    contractAddress: {\n      97: '',\n      56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.1157',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 38,\n    stakingToken: tokens.cake,\n    earningToken: tokens.wsote,\n    contractAddress: {\n      97: '',\n      56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.23',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 37,\n    stakingToken: tokens.cake,\n    earningToken: tokens.front,\n    contractAddress: {\n      97: '',\n      56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.2546',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 36,\n    stakingToken: tokens.cake,\n    earningToken: tokens.helmet,\n    contractAddress: {\n      97: '',\n      56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.81',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 35,\n    stakingToken: tokens.cake,\n    earningToken: tokens.btcst,\n    contractAddress: {\n      97: '',\n      56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.011574',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 34,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bscx,\n    contractAddress: {\n      97: '',\n      56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.17361',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 33,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ten,\n    contractAddress: {\n      97: '',\n      56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.05787',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 32,\n    stakingToken: tokens.cake,\n    earningToken: tokens.balbt,\n    contractAddress: {\n      97: '',\n      56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.4166',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 31,\n    stakingToken: tokens.cake,\n    earningToken: tokens.asr,\n    contractAddress: {\n      97: '',\n      56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 30,\n    stakingToken: tokens.cake,\n    earningToken: tokens.atm,\n    contractAddress: {\n      97: '',\n      56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 29,\n    stakingToken: tokens.cake,\n    earningToken: tokens.og,\n    contractAddress: {\n      97: '',\n      56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 28,\n    stakingToken: tokens.cake,\n    earningToken: tokens.reef,\n    contractAddress: {\n      97: '',\n      56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '115.74',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 27,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ditto,\n    contractAddress: {\n      97: '',\n      56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.01157',\n    sortOrder: 999,\n    isFinished: false,\n  },\n  {\n    sousId: 26,\n    stakingToken: tokens.twt,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.248',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 24,\n    stakingToken: tokens.cake,\n    earningToken: tokens.juv,\n    contractAddress: {\n      97: '',\n      56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 25,\n    stakingToken: tokens.cake,\n    earningToken: tokens.psg,\n    contractAddress: {\n      97: '',\n      56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 21,\n    stakingToken: tokens.cake,\n    earningToken: tokens.vai,\n    contractAddress: {\n      97: '',\n      56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.104',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 20,\n    stakingToken: tokens.bnb,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\n    },\n    poolCategory: PoolCategory.BINANCE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 19,\n    stakingToken: tokens.cake,\n    earningToken: tokens.bnb,\n    contractAddress: {\n      97: '',\n      56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.0041',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 18,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 17,\n    stakingToken: tokens.cake,\n    earningToken: tokens.blink,\n    contractAddress: {\n      97: '',\n      56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '23.14',\n    sortOrder: 999,\n    isFinished: true,\n    enableEmergencyWithdraw: true,\n  },\n  {\n    sousId: 16,\n    stakingToken: tokens.cake,\n    earningToken: tokens.unfi,\n    contractAddress: {\n      97: '',\n      56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.02893',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 15,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '',\n      56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 14,\n    stakingToken: tokens.cake,\n    earningToken: tokens.hard,\n    contractAddress: {\n      97: '',\n      56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.346',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 13,\n    stakingToken: tokens.cake,\n    earningToken: tokens.broobee,\n    contractAddress: {\n      97: '',\n      56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '12.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 12,\n    stakingToken: tokens.cake,\n    earningToken: tokens.stax,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '0.2',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 11,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nar,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    tokenPerBlock: '1',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 10,\n    stakingToken: tokens.cake,\n    earningToken: tokens.nya,\n    contractAddress: {\n      97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n      56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\n    },\n    poolCategory: PoolCategory.COMMUNITY,\n    harvest: true,\n    sortOrder: 999,\n    tokenPerBlock: '10',\n    isFinished: true,\n  },\n  {\n    sousId: 9,\n    stakingToken: tokens.cake,\n    earningToken: tokens.ctk,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.5',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 8,\n    stakingToken: tokens.cake,\n    earningToken: tokens.twt,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '20',\n    sortOrder: 999,\n    isFinished: true,\n  },\n  {\n    sousId: 7,\n    stakingToken: tokens.cake,\n    earningToken: tokens.inj,\n    contractAddress: {\n      97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n      56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '0.25',\n    sortOrder: 999,\n    isFinished: true,\n  },\n]\n\nexport default pools\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n  TotalWonMarketResponse,\n  TotalWonRoundResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedHash: betResponse.claimedHash,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const transformTotalWonResponse = (\n  marketResponse: TotalWonMarketResponse,\n  roundResponse: TotalWonRoundResponse[],\n): number => {\n  const houseRounds = roundResponse.reduce((accum, round) => {\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\n  }, 0)\n\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const calls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks'].map((method) => ({\n    address: getPredictionsAddress(),\n    name: method,\n  }))\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [isPaused], [bufferBlocks]] = await multicallv2(\n    predictionsAbi,\n    calls,\n  )\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalBlocks: intervalBlocks.toNumber(),\n    bufferBlocks: bufferBlocks.toNumber(),\n    minBetAmount: minBetAmount.toNumber(),\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData($position: String) {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n        rounds(where: { position: $position }) {\n          totalAmount\n        }\n      }\n    `,\n    { position: BetPosition.HOUSE },\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\n\n  return transformTotalWonResponse(response.market, response.rounds)\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedHash: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\nexport interface TotalWonRoundResponse {\n  totalAmount: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n  claimedHash\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'CAKE',\n    lpAddresses: {\n      97: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n      56: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 251,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0x0eD7e52944161450477ee417DE9Cd3a859b14fD0',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 252,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V3 by order of release (some may be out of PID order due to multiplier boost)\n   */\n  {\n    pid: 421,\n    lpSymbol: 'BSCPAD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\n    },\n    token: tokens.bscpad,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 420,\n    lpSymbol: 'RABBIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\n    },\n    token: tokens.rabbit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 419,\n    lpSymbol: 'WAULTx-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e4370204f598205998143F07ebCC486E441b456',\n    },\n    token: tokens.waultx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 418,\n    lpSymbol: 'WEX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\n    },\n    token: tokens.wex,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 417,\n    lpSymbol: 'FORM-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\n    },\n    token: tokens.form,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 416,\n    lpSymbol: 'ORBS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\n    },\n    token: tokens.orbs,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 415,\n    lpSymbol: 'DG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\n    },\n    token: tokens.$dg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 414,\n    lpSymbol: 'WOO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89eE0491CE55d2f7472A97602a95426216167189',\n    },\n    token: tokens.woo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 413,\n    lpSymbol: 'HTB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2a995d355d5df641e878c0f366685741fd18d004',\n    },\n    token: tokens.htb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 351,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 337,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 412,\n    lpSymbol: 'HAI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\n    },\n    token: tokens.hai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 411,\n    lpSymbol: 'O3-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\n    },\n    token: tokens.o3,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 410,\n    lpSymbol: 'AMPL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\n    },\n    token: tokens.ampl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 343,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 409,\n    lpSymbol: 'ETH-USDC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.usdc,\n  },\n  {\n    pid: 408,\n    lpSymbol: 'BTCB-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 347,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 407,\n    lpSymbol: 'MARSH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\n    },\n    token: tokens.marsh,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 406,\n    lpSymbol: 'BORING-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\n    },\n    token: tokens.boring,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 405,\n    lpSymbol: 'MBOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\n    },\n    token: tokens.mbox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 404,\n    lpSymbol: 'ATA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef7767677867552cfa699148b96a03358a9be779',\n    },\n    token: tokens.ata,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 403,\n    lpSymbol: 'MX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\n    },\n    token: tokens.mx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 402,\n    lpSymbol: 'bCFX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\n    },\n    token: tokens.bcfx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 401,\n    lpSymbol: 'QKC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\n    },\n    token: tokens.qkc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 400,\n    lpSymbol: 'KTN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\n    },\n    token: tokens.ktn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 399,\n    lpSymbol: 'MTRG-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\n    },\n    token: tokens.mtrg,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 398,\n    lpSymbol: 'SWG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\n    },\n    token: tokens.swg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 397,\n    lpSymbol: 'TUSD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\n    },\n    token: tokens.tusd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 396,\n    lpSymbol: 'VRT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\n    },\n    token: tokens.vrt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 395,\n    lpSymbol: 'EZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\n    },\n    token: tokens.ez,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 394,\n    lpSymbol: 'KALM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\n    },\n    token: tokens.kalm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 393,\n    lpSymbol: 'pOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\n    },\n    token: tokens.popen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 335,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 392,\n    lpSymbol: 'WELL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\n    },\n    token: tokens.well,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 391,\n    lpSymbol: 'DERI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\n    },\n    token: tokens.deri,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 390,\n    lpSymbol: 'CHR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\n    },\n    token: tokens.chr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 389,\n    lpSymbol: 'CAKE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 388,\n    lpSymbol: 'CYC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\n    },\n    token: tokens.cyc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 387,\n    lpSymbol: 'XEND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\n    },\n    token: tokens.xend,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 296,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 386,\n    lpSymbol: 'HOTCROSS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\n    },\n    token: tokens.hotcross,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 385,\n    lpSymbol: 'RFOX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\n    },\n    token: tokens.rfox,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 384,\n    lpSymbol: 'WMASS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\n    },\n    token: tokens.wmass,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 383,\n    lpSymbol: 'UBXT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\n    },\n    token: tokens.ubxt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 381,\n    lpSymbol: 'BTR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\n    },\n    token: tokens.btr,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 380,\n    lpSymbol: 'τDOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\n    },\n    token: tokens.τdoge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 379,\n    lpSymbol: 'PMON-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\n    },\n    token: tokens.pmon,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 378,\n    lpSymbol: 'ONE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\n    },\n    token: tokens.one,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 377,\n    lpSymbol: 'FINE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\n    },\n    token: tokens.fine,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 376,\n    lpSymbol: 'DOGE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xac109c8025f272414fd9e2faa805a583708a017f',\n    },\n    token: tokens.doge,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 310,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 375,\n    lpSymbol: 'OIN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\n    },\n    token: tokens.oin,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 374,\n    lpSymbol: 'HYFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\n    },\n    token: tokens.hyfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 373,\n    lpSymbol: 'KUN-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 372,\n    lpSymbol: 'KUN-QSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\n    },\n    token: tokens.kun,\n    quoteToken: tokens.qsd,\n  },\n  {\n    pid: 371,\n    lpSymbol: 'MATH-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\n    },\n    token: tokens.math,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 370,\n    lpSymbol: 'mCOIN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\n    },\n    token: tokens.mcoin,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 369,\n    lpSymbol: 'WIN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\n    },\n    token: tokens.win,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 368,\n    lpSymbol: 'TRX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\n    },\n    token: tokens.trx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 367,\n    lpSymbol: 'BTT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\n    },\n    token: tokens.btt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 366,\n    lpSymbol: 'PNT-pBTC LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\n    },\n    token: tokens.pnt,\n    quoteToken: tokens.pbtc,\n  },\n  {\n    pid: 311,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 365,\n    lpSymbol: 'BTCB-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 364,\n    lpSymbol: 'LMT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\n    },\n    token: tokens.lmt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 363,\n    lpSymbol: 'DFD-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\n    },\n    token: tokens.dfd,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 362,\n    lpSymbol: 'ALPACA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\n    },\n    token: tokens.alpaca,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 361,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 304,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 360,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 359,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 358,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 357,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 356,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 355,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 354,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 353,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 352,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 350,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 349,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 348,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 346,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 345,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 344,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 342,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 341,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 340,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 339,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 338,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 336,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 334,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 333,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 332,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 331,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 330,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 329,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 328,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 327,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 326,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 325,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 324,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 323,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 322,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 321,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 320,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 319,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x853784B7BDe87d858555715c0123374242db7943',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 318,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 317,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 316,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 315,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 314,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 313,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 312,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 309,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 308,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 307,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 306,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 305,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 303,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 302,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 301,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 300,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 299,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 298,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 297,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 295,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 294,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 293,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05faf555522Fa3F93959F86B41A3808666093210',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 292,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 291,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 290,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 289,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 288,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 287,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 286,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 285,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 284,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 283,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 282,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 281,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 280,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 279,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 278,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 277,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 276,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 275,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 274,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 273,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 272,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 271,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 270,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 269,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 268,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 267,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 266,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 265,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 264,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 263,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 262,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 261,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 260,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 259,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 258,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 257,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 256,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 255,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 254,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 253,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * V2 farms, set to be removed once unstaked\n   */\n  {\n    pid: 139,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 250,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 193,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 249,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 248,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 247,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 246,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 245,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 244,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 243,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 242,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 241,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 240,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 239,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 238,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 237,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 236,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 235,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 234,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 233,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 232,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 231,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 230,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 229,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 228,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 227,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 226,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 225,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 224,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 223,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 222,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe3D941e74141311436F82523817EBaa26462967d',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 221,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 220,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 219,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 218,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 217,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 216,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 215,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 214,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 213,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 212,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 211,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 210,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 209,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 208,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 207,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 206,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 205,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 204,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 203,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 202,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 201,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 200,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 199,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 198,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 197,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 196,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 195,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 194,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 192,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 191,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 190,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 189,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 188,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 187,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 186,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 185,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 184,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 183,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 182,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 181,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2c065E42B464ef38480778B0624A207A09042481',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 180,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 179,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 178,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 177,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 176,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 175,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 174,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 173,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 172,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 171,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 170,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 169,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 168,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 167,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 166,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 165,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 164,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 163,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 162,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 161,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 160,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 159,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 158,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 157,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 156,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 155,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 154,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 153,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 152,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 151,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 150,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 149,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 148,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 147,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 146,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 145,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 144,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x082A80b3a55BD3B320a16678784186a979882b21',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 143,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 142,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x473390697036E7611a670575eA9141583471fF47',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 141,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 140,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  /**\n   * All farms below here are from v1 and are to be set to 0x\n   */\n  {\n    pid: 1,\n    lpSymbol: 'CAKE-BNB LP',\n    lpAddresses: {\n      97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\n      56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 136,\n    lpSymbol: 'τBTC-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\n    },\n    token: tokens.τbtc,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 76,\n    lpSymbol: 'SWINGBY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\n    },\n    token: tokens.swingby,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 135,\n    lpSymbol: 'XED-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\n    },\n    token: tokens.xed,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 134,\n    lpSymbol: 'HAKKA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\n    },\n    token: tokens.hakka,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 133,\n    lpSymbol: 'CGG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\n    },\n    token: tokens.cgg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 132,\n    lpSymbol: 'SUTER-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\n    },\n    token: tokens.suter,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 131,\n    lpSymbol: 'bROOBEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 130,\n    lpSymbol: 'HZN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\n    },\n    token: tokens.hzn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 129,\n    lpSymbol: 'ALPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\n    },\n    token: tokens.alpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 128,\n    lpSymbol: 'PERL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\n    },\n    token: tokens.perl,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 127,\n    lpSymbol: 'TLM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\n    },\n    token: tokens.tlm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 125,\n    lpSymbol: 'JGN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x890479844484D67e34B99e1BBc1468231b254c08',\n    },\n    token: tokens.jgn,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 124,\n    lpSymbol: 'EPS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\n    },\n    token: tokens.eps,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 123,\n    lpSymbol: 'ARPA-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\n    },\n    token: tokens.arpa,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 122,\n    lpSymbol: 'ITAM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\n    },\n    token: tokens.itam,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 121,\n    lpSymbol: 'BONDLY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\n    },\n    token: tokens.bondly,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 120,\n    lpSymbol: 'TKO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\n    },\n    token: tokens.tko,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 119,\n    lpSymbol: 'APYS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\n    },\n    token: tokens.apys,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 118,\n    lpSymbol: 'HOO-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\n    },\n    token: tokens.hoo,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 117,\n    lpSymbol: 'ODDZ-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x61376b56ff33c618b115131712a4138f98810a6a',\n    },\n    token: tokens.oddz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 116,\n    lpSymbol: 'EASY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\n    },\n    token: tokens.easy,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 115,\n    lpSymbol: 'NRV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\n    },\n    token: tokens.nrv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 114,\n    lpSymbol: 'DEGO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\n    },\n    token: tokens.dego,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 113,\n    lpSymbol: 'GUM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\n    },\n    token: tokens.gum,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 112,\n    lpSymbol: 'pBTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\n    },\n    token: tokens.pbtc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 111,\n    lpSymbol: 'DFT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\n    },\n    token: tokens.dft,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 110,\n    lpSymbol: 'SWTH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\n    },\n    token: tokens.swth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 109,\n    lpSymbol: 'LIEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcd14855150335AAE984aa6D281E090c27035C692',\n    },\n    token: tokens.lien,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 108,\n    lpSymbol: 'ZIL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\n    },\n    token: tokens.zil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 107,\n    lpSymbol: 'pCWS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\n    },\n    token: tokens.pcws,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 106,\n    lpSymbol: 'bBADGER-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\n    },\n    token: tokens.bbadger,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 104,\n    lpSymbol: 'bDIGG-BTCB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\n    },\n    token: tokens.bdigg,\n    quoteToken: tokens.btcb,\n  },\n  {\n    pid: 103,\n    lpSymbol: 'LTO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\n    },\n    token: tokens.lto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 102,\n    lpSymbol: 'MIR-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\n    },\n    token: tokens.mir,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 101,\n    lpSymbol: 'TRADE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\n    },\n    token: tokens.trade,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 100,\n    lpSymbol: 'DUSK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\n    },\n    token: tokens.dusk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 99,\n    lpSymbol: 'BIFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\n    },\n    token: tokens.bifi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 98,\n    lpSymbol: 'TXL-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\n    },\n    token: tokens.txl,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 97,\n    lpSymbol: 'COS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\n    },\n    token: tokens.cos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 96,\n    lpSymbol: 'BUNNY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\n    },\n    token: tokens.bunny,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 95,\n    lpSymbol: 'ALICE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\n    },\n    token: tokens.alice,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 94,\n    lpSymbol: 'FOR-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\n    },\n    token: tokens.for,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 93,\n    lpSymbol: 'BUX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\n    },\n    token: tokens.bux,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 92,\n    lpSymbol: 'NULS-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 91,\n    lpSymbol: 'NULS-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\n    },\n    token: tokens.nuls,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 90,\n    lpSymbol: 'BELT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\n    },\n    token: tokens.belt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 89,\n    lpSymbol: 'RAMP-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\n    },\n    token: tokens.ramp,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 88,\n    lpSymbol: 'BFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\n    },\n    token: tokens.bfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 87,\n    lpSymbol: 'DEXE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\n    },\n    token: tokens.dexe,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 86,\n    lpSymbol: 'BEL-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\n    },\n    token: tokens.bel,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 85,\n    lpSymbol: 'TPT-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\n    },\n    token: tokens.tpt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 84,\n    lpSymbol: 'WATCH-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\n    },\n    token: tokens.watch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 83,\n    lpSymbol: 'xMARK-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\n    },\n    token: tokens.xmark,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 82,\n    lpSymbol: 'bMXX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\n    },\n    token: tokens.bmxx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 81,\n    lpSymbol: 'IOTX-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\n    },\n    token: tokens.iotx,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 80,\n    lpSymbol: 'BOR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\n    },\n    token: tokens.bor,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 79,\n    lpSymbol: 'bOPEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\n    },\n    token: tokens.bopen,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 78,\n    lpSymbol: 'SUSHI-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\n    },\n    token: tokens.sushi,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 77,\n    lpSymbol: 'DODO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\n    },\n    token: tokens.dodo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 75,\n    lpSymbol: 'BRY-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\n    },\n    token: tokens.bry,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 74,\n    lpSymbol: 'ZEE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\n    },\n    token: tokens.zee,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 73,\n    lpSymbol: 'SWGb-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\n    },\n    token: tokens.swgb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 72,\n    lpSymbol: 'COMP-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x0392957571f28037607c14832d16f8b653edd472',\n    },\n    token: tokens.comp,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 71,\n    lpSymbol: 'SFP-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\n    },\n    token: tokens.sfp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 70,\n    lpSymbol: 'BETH-ETH LP',\n    lpAddresses: {\n      97: '',\n      56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\n    },\n    token: tokens.beth,\n    quoteToken: tokens.eth,\n  },\n  {\n    pid: 69,\n    lpSymbol: 'LINA-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\n    },\n    token: tokens.lina,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 68,\n    lpSymbol: 'LIT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\n    },\n    token: tokens.lit,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 67,\n    lpSymbol: 'HGET-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\n    },\n    token: tokens.hget,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 66,\n    lpSymbol: 'BDO-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\n    },\n    token: tokens.bdo,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 65,\n    lpSymbol: 'EGLD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\n    },\n    token: tokens.egld,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 63,\n    lpSymbol: 'UST-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\n    },\n    token: tokens.ust,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 62,\n    lpSymbol: 'mAMZN-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\n    },\n    token: tokens.mamzn,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 61,\n    lpSymbol: 'mGOOGL-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\n    },\n    token: tokens.mgoogl,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 60,\n    lpSymbol: 'mNFLX-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xF609ade3846981825776068a8eD7746470029D1f',\n    },\n    token: tokens.mnflx,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 59,\n    lpSymbol: 'mTSLA-UST LP',\n    lpAddresses: {\n      97: '',\n      56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\n    },\n    token: tokens.mtsla,\n    quoteToken: tokens.ust,\n  },\n  {\n    pid: 58,\n    lpSymbol: 'wSOTE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\n    },\n    token: tokens.wsote,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 57,\n    lpSymbol: 'FRONT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\n    },\n    token: tokens.front,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 56,\n    lpSymbol: 'Helmet-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\n    },\n    token: tokens.helmet,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 55,\n    lpSymbol: 'BTCST-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\n    },\n    token: tokens.btcst,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 54,\n    lpSymbol: 'LTC-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\n    },\n    token: tokens.ltc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 53,\n    lpSymbol: 'USDC-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 52,\n    lpSymbol: 'DAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 51,\n    lpSymbol: 'BSCX-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\n    },\n    token: tokens.bscx,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 50,\n    lpSymbol: 'TEN-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\n    },\n    token: tokens.ten,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 49,\n    lpSymbol: 'bALBT-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\n    },\n    token: tokens.balbt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 46,\n    lpSymbol: 'OG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\n    },\n    token: tokens.og,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 47,\n    lpSymbol: 'ASR-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd6b900d5308356317299dafe303e661271aa12f1',\n    },\n    token: tokens.asr,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 48,\n    lpSymbol: 'ATM-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\n    },\n    token: tokens.atm,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 45,\n    lpSymbol: 'REEF-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\n    },\n    token: tokens.reef,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 44,\n    lpSymbol: 'Ditto-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\n    },\n    token: tokens.ditto,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 43,\n    lpSymbol: 'JUV-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\n    },\n    token: tokens.juv,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 42,\n    lpSymbol: 'PSG-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\n    },\n    token: tokens.psg,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 39,\n    lpSymbol: 'UNFI-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\n    },\n    token: tokens.unfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 41,\n    lpSymbol: 'VAI-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xff17ff314925dff772b71abdff2782bc913b3575',\n    },\n    token: tokens.vai,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 40,\n    lpSymbol: 'BLK-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\n    },\n    token: tokens.blink,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 37,\n    lpSymbol: 'HARD-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\n    },\n    token: tokens.hard,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\n      56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'ADA-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\n    },\n    token: tokens.ada,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 4,\n    lpSymbol: 'BAND-BNB LP',\n    lpAddresses: {\n      97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\n      56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\n    },\n    token: tokens.band,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 5,\n    lpSymbol: 'DOT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\n    },\n    token: tokens.dot,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 6,\n    lpSymbol: 'EOS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\n    },\n    token: tokens.eos,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 7,\n    lpSymbol: 'LINK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\n    },\n    token: tokens.link,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 11,\n    lpSymbol: 'USDT-BUSD LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 12,\n    lpSymbol: 'TWT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\n    },\n    token: tokens.twt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 13,\n    lpSymbol: 'XVS-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\n    },\n    token: tokens.xvs,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 14,\n    lpSymbol: 'ETH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\n    },\n    token: tokens.eth,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 15,\n    lpSymbol: 'BTCB-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\n    },\n    token: tokens.btcb,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 16,\n    lpSymbol: 'ALPHA-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\n    },\n    token: tokens.alpha,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 17,\n    lpSymbol: 'USDT-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\n    },\n    token: tokens.usdt,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 18,\n    lpSymbol: 'XRP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\n    },\n    token: tokens.xrp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 19,\n    lpSymbol: 'ATOM-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\n    },\n    token: tokens.atom,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 20,\n    lpSymbol: 'YFII-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\n    },\n    token: tokens.yfii,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 21,\n    lpSymbol: 'DAI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\n    },\n    token: tokens.dai,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 22,\n    lpSymbol: 'XTZ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\n    },\n    token: tokens.xtz,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 23,\n    lpSymbol: 'BCH-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x54edd846db17f43b6e43296134ecd96284671e81',\n    },\n    token: tokens.bch,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 24,\n    lpSymbol: 'YFI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\n    },\n    token: tokens.yfi,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 25,\n    lpSymbol: 'UNI-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\n    },\n    token: tokens.uni,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 26,\n    lpSymbol: 'FIL-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\n    },\n    token: tokens.fil,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 27,\n    lpSymbol: 'INJ-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\n    },\n    token: tokens.inj,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 29,\n    lpSymbol: 'USDC-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\n    },\n    token: tokens.usdc,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 30,\n    lpSymbol: 'SXP-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\n    },\n    token: tokens.sxp,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 32,\n    lpSymbol: 'CTK-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7793870484647a7278907498ec504879d6971EAb',\n    },\n    token: tokens.ctk,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 34,\n    lpSymbol: 'STAX-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\n    },\n    token: tokens.stax,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 35,\n    lpSymbol: 'NAR-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\n    },\n    token: tokens.nar,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 36,\n    lpSymbol: 'NYA-CAKE LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x2730bf486d658838464a4ef077880998d944252d',\n    },\n    token: tokens.nya,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 38,\n    lpSymbol: 'bROOBEE-CAKE LP',\n    lpAddresses: {\n      97: '',\n      56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\n    },\n    token: tokens.broobee,\n    quoteToken: tokens.cake,\n    isCommunity: true,\n  },\n  {\n    pid: 8,\n    lpSymbol: 'BAKE-BNB Bakery LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 9,\n    lpSymbol: 'BURGER-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\n    },\n    token: tokens.burger,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 10,\n    lpSymbol: 'BAKE-BNB LP',\n    lpAddresses: {\n      97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\n      56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\n    },\n    token: tokens.bake,\n    quoteToken: tokens.wbnb,\n  },\n]\n\nexport default farms\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: 'https://exchange.pancakeswap.finance/#/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n      {\n        label: t('LP Migration'),\n        href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n      },\n      {\n        label: t('V1 Liquidity (Old)'),\n        href: 'https://v1exchange.pancakeswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Prediction (BETA)'),\n    icon: 'PredictionsIcon',\n    href: '/prediction',\n  },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: t('Collectibles'),\n    icon: 'NftIcon',\n    href: '/collectibles',\n  },\n  {\n    label: t('Team Battle'),\n    icon: 'TeamBattleIcon',\n    href: '/competition',\n  },\n  {\n    label: t('Teams & Profile'),\n    icon: 'GroupsIcon',\n    items: [\n      {\n        label: t('Leaderboard'),\n        href: '/teams',\n      },\n      {\n        label: t('Task Center'),\n        href: '/profile/tasks',\n      },\n      {\n        label: t('Your Profile'),\n        href: '/profile',\n      },\n    ],\n  },\n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    href: 'https://pancakeswap.info',\n    status: {\n      text: t('New').toLocaleUpperCase(),\n      color: 'success',\n    },\n  },\n  {\n    label: t('IFO'),\n    icon: 'IfoIcon',\n    href: '/ifo',\n  },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: t('Contact'),\n        href: 'https://docs.pancakeswap.finance/contact-us',\n      },\n      {\n        label: t('Voting'),\n        href: 'https://voting.pancakeswap.finance',\n      },\n      {\n        label: t('Github'),\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: t('Docs'),\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://pancakeswap.medium.com',\n      },\n      {\n        label: t('Merch'),\n        href: 'https://pancakeswap.creator-spring.com/',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprRowProps {\n  pool: Pool\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s CAKE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport Balance from 'components/Balance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text>\n                <TimerIcon ml=\"4px\" color=\"primary\" />\n              </Link>\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\n          {t('Info site')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\nimport tokens from 'config/constants/tokens'\nimport { getAddress } from 'utils/addressHelpers'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'CAKE' && stakingToken.symbol === 'CAKE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn CAKE, stake CAKE')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\nimport { formatNumber } from 'utils/formatBalance'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake CAKE into pool.')}</Text>\n      <Text>{t('Harvest: collect CAKE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <>\n                  <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                  {earningTokenPrice > 0 && (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      prefix=\"~\"\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  <Heading color=\"textDisabled\">0</Heading>\n                  <Text fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                </>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningToken={earningToken}\n          stakingToken={stakingToken}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from 'hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new CAKE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked =\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 CAKE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\n            width={24}\n            height={24}\n            alt={stakingToken.symbol}\n          />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus } from 'hooks/useApprove'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent CAKE profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningToken={tokens.cake}\n          stakingToken={tokens.cake}\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  useMatchBreakpoints,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n      <ButtonMenuItem as={Link} to={`${url}`}>\n        {t('Live')}\n      </ButtonMenuItem>\n      <NotificationDot show={hasStakeInFinishedPools}>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {t('Finished')}\n        </ButtonMenuItem>\n      </NotificationDot>\n    </ButtonMenu>\n  )\n\n  const stakedOnlySwitch = (\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\n    </Flex>\n  )\n\n  if (isXs || isSm) {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\n        <Flex width=\"100%\" justifyContent=\"space-between\">\n          {viewModeToggle}\n          {liveOrFinishedSwitch}\n        </Flex>\n        {stakedOnlySwitch}\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex\n      alignItems=\"center\"\n      justifyContent={['space-around', 'space-around', 'flex-start']}\n      mb={['24px', '24px', '24px', '0px']}\n    >\n      {viewModeToggle}\n      {liveOrFinishedSwitch}\n      {stakedOnlySwitch}\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_GAS_LIMIT } from 'config'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account, gas: DEFAULT_GAS_LIMIT })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('CAKE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\n        )\n        setPendingTx(false)\n        onDismiss()\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" CAKE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" CAKE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto CAKE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto CAKE pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto CAKE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport TokenPairImage from 'components/TokenPairImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\n\n  if (isAutoVault) {\n    title = t('Auto CAKE')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual CAKE')\n    subtitle = `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const labelText = isAutoVault ? t('Recent CAKE profit') : t('%asset% Earned', { asset: earningToken.symbol })\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" CAKE\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isXs && !isSm}\n                  fontSize={isXs || isSm ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\n\ninterface AprProps extends FlexProps {\n  pool: Pool\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={roundingDecimals}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </Flex>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: Pool\n  performanceFee: number\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\n  const { t } = useTranslation()\n  const { isXs, isSm } = useMatchBreakpoints()\n  const { isAutoVault } = pool\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {isAutoVault ? t('APY') : t('APR')}\n        </Text>\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { Pool } from 'state/types'\nimport { useBlock } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: Pool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\n        <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text>\n      </Flex>\n      <Flex flex=\"1\">\n        <Link\n          external\n          href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}\n          onClick={(e) => e.stopPropagation()}\n        >\n          <TimerIcon ml=\"4px\" />\n        </Link>\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n    margin-bottom: 0;\n    height: 130px;\n    max-height: 130px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/hooks'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface HarvestActionProps extends Pool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  isAutoVault,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  // These will be reassigned later if its Auto CAKE vault\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  let hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  // Auto CAKE vault calculations\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = isAutoVault ? (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent CAKE profit')}\n    </Text>\n  ) : (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        {isAutoVault ? (\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n            <UnstakingFeeCountdownRow isTableVariant />\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n              {tooltipVisible && tooltip}\n              <TooltipText ref={targetRef} small>\n                {t('Performance Fee')}\n              </TooltipText>\n              <Flex alignItems=\"center\">\n                <Text ml=\"4px\" small>\n                  {performanceFee / 100}%\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n        ) : (\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        )}\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCheckVaultApprovalStatus, useSousApprove, useVaultApprove } from 'hooks/useApprove'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: Pool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useSousApprove(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: Pool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\n\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Link>\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\n            {t('Info site')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} CAKE ${t('Stake').toLocaleLowerCase()} CAKE`}\n          </Text>\n        )}\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { useCakeVault } from 'state/hooks'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\n\ninterface PoolRowProps {\n  pool: Pool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  const {\n    fees: { performanceFee },\n  } = useCakeVault()\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\n        {isXl && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: Pool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { Pool } from 'state/types'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { ViewMode } from './components/ToggleView/ToggleView'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled(Flex)`\n  flex-direction: column;\n  margin-bottom: 24px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-direction: row;\n  }\n`\n\nconst SearchSortContainer = styled(Flex)`\n  gap: 10px;\n  justify-content: space-between;\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: Pool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  const poolsToShow = () => {\n    let chosenPools = []\n    if (showFinishedPools) {\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n    } else {\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n    }\n\n    if (searchQuery) {\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\n      chosenPools = chosenPools.filter((pool) =>\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n      )\n    }\n\n    return sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  }\n\n  const cardLayout = (\n    <CardLayout>\n      {poolsToShow().map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Syrup Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls justifyContent=\"space-between\">\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <SearchSortContainer>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </Flex>\n            <Flex flexDirection=\"column\" width=\"50%\">\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <ControlStretch>\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n              </ControlStretch>\n            </Flex>\n          </SearchSortContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={192}\n          height={184.5}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\nconst Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Collectibles = lazy(() => import('./views/Collectibles'))\nconst Teams = lazy(() => import('./views/Teams'))\nconst Team = lazy(() => import('./views/Teams/Team'))\nconst Profile = lazy(() => import('./views/Profile'))\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            <Route path=\"/ifo\">\n              <Ifos />\n            </Route>\n            <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n"],"sourceRoot":""}